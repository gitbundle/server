# this file is automatically generated. DO NOT EDIT
kind: pipeline
type: docker
name: gitbundle-private-linux-arm64
platform:
  os: linux
  arch: arm64
volumes:
- name: deps
  temp: {}
steps:
- name: build
  image: golang:1.21-bullseye
  commands:
  - sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all build
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata private_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
  volumes:
  - name: deps
    path: /go
- name: executable-environment-to-ini
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/arm64/environment-to-ini --help
- name: executable-gitbundle
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/arm64/gitbundle --help
- name: dryrun
  pull: always
  image: gitbundle/bundle-docker
  settings:
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.arm64
    dry_run: true
    repo: gitbundle/gitbundle
    registry: ''
    tags: linux-arm64
    username:
      from_secret: docker.com_docker_username_sk
    password:
      from_secret: docker.com_docker_password_sk
- name: publish
  pull: always
  image: gitbundle/bundle-docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm64
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.arm64
    repo: gitbundle/gitbundle
    registry: ''
    tags: linux-arm64
    username:
      from_secret: docker.com_docker_username_sk
    password:
      from_secret: docker.com_docker_password_sk
  when:
    event:
      exclude:
      - pull_request
depends_on: []
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: gitbundle-private-linux-amd64
platform:
  os: linux
  arch: amd64
volumes:
- name: deps
  temp: {}
steps:
- name: build
  image: golang:1.21-bullseye
  commands:
  - sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all build
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata private_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
  volumes:
  - name: deps
    path: /go
- name: executable-environment-to-ini
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/amd64/environment-to-ini --help
- name: executable-gitbundle
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/amd64/gitbundle --help
- name: dryrun
  pull: always
  image: gitbundle/bundle-docker
  settings:
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: gitbundle/gitbundle
    registry: ''
    tags: linux-amd64
    username:
      from_secret: docker.com_docker_username_sk
    password:
      from_secret: docker.com_docker_password_sk
- name: publish
  pull: always
  image: gitbundle/bundle-docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-amd64
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.amd64
    repo: gitbundle/gitbundle
    registry: ''
    tags: linux-amd64
    username:
      from_secret: docker.com_docker_username_sk
    password:
      from_secret: docker.com_docker_password_sk
  when:
    event:
      exclude:
      - pull_request
depends_on: []
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: gitbundle-beta-linux-arm64
platform:
  os: linux
  arch: arm64
volumes:
- name: deps
  temp: {}
steps:
- name: build
  image: golang:1.21-bullseye
  commands:
  - sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all build
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata beta_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
  volumes:
  - name: deps
    path: /go
- name: executable-environment-to-ini
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/arm64/environment-to-ini --help
- name: executable-gitbundle
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/arm64/gitbundle --help
- name: dryrun
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.arm64
    dry_run: true
    repo: gitbundle.com/bundle/magit-server
    registry: gitbundle.com
    tags: linux-arm64
    username:
      from_secret: gitbundle.com_docker_username_sk
    password:
      from_secret: gitbundle.com_docker_password_sk
- name: publish
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm64
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.arm64
    repo: gitbundle.com/bundle/magit-server
    registry: gitbundle.com
    tags: linux-arm64
    username:
      from_secret: gitbundle.com_docker_username_sk
    password:
      from_secret: gitbundle.com_docker_password_sk
  when:
    event:
      exclude:
      - pull_request
depends_on: []
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: gitbundle-beta-linux-amd64
platform:
  os: linux
  arch: amd64
volumes:
- name: deps
  temp: {}
steps:
- name: build
  image: golang:1.21-bullseye
  commands:
  - sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all build
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata beta_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
  volumes:
  - name: deps
    path: /go
- name: executable-environment-to-ini
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/amd64/environment-to-ini --help
- name: executable-gitbundle
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/amd64/gitbundle --help
- name: dryrun
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: gitbundle.com/bundle/magit-server
    registry: gitbundle.com
    tags: linux-amd64
    username:
      from_secret: gitbundle.com_docker_username_sk
    password:
      from_secret: gitbundle.com_docker_password_sk
- name: publish
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-amd64
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.amd64
    repo: gitbundle.com/bundle/magit-server
    registry: gitbundle.com
    tags: linux-amd64
    username:
      from_secret: gitbundle.com_docker_username_sk
    password:
      from_secret: gitbundle.com_docker_password_sk
  when:
    event:
      exclude:
      - pull_request
depends_on: []
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: manifest-gitbundle-private
platform:
  os: linux
  arch: amd64
steps:
- name: manifest
  image: gitbundle/bundle-manifest
  pull: always
  settings:
    dump: true
    auto_tag: true
    spec: docker/manifest.gitbundle-private.tmpl
    username:
      from_secret: docker.com_docker_username_sk
    password:
      from_secret: docker.com_docker_password_sk
depends_on:
- gitbundle-private-linux-arm64
- gitbundle-private-linux-amd64
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: manifest-gitbundle-beta
platform:
  os: linux
  arch: amd64
steps:
- name: manifest
  image: bundle.lo/gitbundle/bundle-manifest
  pull: always
  settings:
    dump: true
    auto_tag: true
    spec: docker/manifest.gitbundle-beta.tmpl
    username:
      from_secret: gitbundle.com_docker_username_sk
    password:
      from_secret: gitbundle.com_docker_password_sk
depends_on:
- gitbundle-beta-linux-arm64
- gitbundle-beta-linux-amd64
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: release
platform:
  os: linux
  arch: amd64
steps:
- name: build
  pull: always
  image: techknowlogick/xgo:go-1.21.x
  commands:
  - sed -i 's/archive.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - sed -i 's/security.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all release
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata private_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
- name: gpg-sign
  image: plugins/gpgsign
  pull: always
  settings:
    detach_sign: true
    excludes:
    - dist/release/*.sha256
    files:
    - dist/release/*
  environment:
    GPGSIGN_KEY:
      from_secret: gpgsign_key
    GPGSIGN_PASSPHRASE:
      from_secret: gpgsign_passphrase
  depends_on:
  - build
- name: github
  image: gitbundle/builds-github-release
  pull: always
  settings:
    base_url: https://github.com
    files:
    - dist/release/*
    file_exists: overwrite
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
    BUNDLE_BUILDS_REPO_LINK: https://github.com/gitbundle/gitbundle
    BUNDLE_BUILDS_REPO_OWNER: gitbundle
    BUNDLE_BUILDS_REPO_NAME: gitbundle
  depends_on:
  - gpg-sign
- name: gitbundle
  image: gitbundle/builds-gitbundle-release
  pull: always
  settings:
    base_url: https://gitbundle.com
    files:
    - dist/release/*
    file_exists: overwrite
  environment:
    GITBUNDLE_TOKEN:
      from_secret: gitbundle_token
    BUNDLE_BUILDS_REPO_LINK: https://gitbundle.com/gitbundle/gitbundle
    BUNDLE_BUILDS_REPO_OWNER: gitbundle
    BUNDLE_BUILDS_REPO_NAME: gitbundle
  depends_on:
  - gpg-sign
depends_on:
- manifest-gitbundle-private
trigger:
  ref:
    include:
    - refs/tags/**
    - refs/tags/**-beta
    - refs/tags/**-nightly
    exclude:
    - refs/tags/**-dev
---
kind: pipeline
type: docker
name: bundle-private-linux-arm64
platform:
  os: linux
  arch: arm64
volumes:
- name: deps
  temp: {}
steps:
- name: build
  image: golang:1.21-bullseye
  commands:
  - sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all build
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata private_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
  volumes:
  - name: deps
    path: /go
- name: executable-environment-to-ini
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/arm64/environment-to-ini --help
- name: executable-gitbundle
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/arm64/gitbundle --help
- name: dryrun
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.arm64
    dry_run: true
    repo: github.com/gitbundle/server
    registry: bundle.lo
    tags: linux-arm64
    username:
      from_secret: bundle.lo_docker_username_sk
    password:
      from_secret: bundle.lo_docker_password_sk
- name: publish
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm64
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.arm64
    repo: github.com/gitbundle/server
    registry: bundle.lo
    tags: linux-arm64
    username:
      from_secret: bundle.lo_docker_username_sk
    password:
      from_secret: bundle.lo_docker_password_sk
  when:
    event:
      exclude:
      - pull_request
depends_on: []
trigger:
  ref:
  - refs/tags/**-dev
---
kind: pipeline
type: docker
name: bundle-private-linux-amd64
platform:
  os: linux
  arch: amd64
volumes:
- name: deps
  temp: {}
steps:
- name: build
  image: golang:1.21-bullseye
  commands:
  - sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list
  - apt-get update && apt-get -qqy install ca-certificates curl gnupg
  - mkdir -p /etc/apt/keyrings && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_18.x
    nodistro main" > /etc/apt/sources.list.d/nodesource.list
  - apt-get update && apt-get -qqy install nodejs
  - npm config get registry
  - apt-get update && apt-get -qqy install python3-pip
  - pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
  - pip3 install -U jc
  - bash hack.sh
  - make clean-all build
  environment:
    CGO_ENABLED: 0
    GO111MODULE: 'on'
    GOPROXY: https://goproxy.cn
    GONOPROXY: bundle.lo
    GONOSUMDB: bundle.lo
    GOPRIVATE: bundle.lo
    TAGS: bindata timetzdata private_edition
    GIT_SSH_KEY:
      from_secret: git_ssh_key
    SSL_DEV_CERT:
      from_secret: ssl_dev_cert
  volumes:
  - name: deps
    path: /go
- name: executable-environment-to-ini
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/amd64/environment-to-ini --help
- name: executable-gitbundle
  image: golang:1.21-bullseye
  commands:
  - ./release/linux/amd64/gitbundle --help
- name: dryrun
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    repo: github.com/gitbundle/server
    registry: bundle.lo
    tags: linux-amd64
    username:
      from_secret: bundle.lo_docker_username_sk
    password:
      from_secret: bundle.lo_docker_password_sk
- name: publish
  pull: always
  image: bundle.lo/gitbundle/bundle-docker
  settings:
    auto_tag: true
    auto_tag_suffix: linux-amd64
    daemon_off: false
    dockerfile: docker/Dockerfile.linux.amd64
    repo: github.com/gitbundle/server
    registry: bundle.lo
    tags: linux-amd64
    username:
      from_secret: bundle.lo_docker_username_sk
    password:
      from_secret: bundle.lo_docker_password_sk
  when:
    event:
      exclude:
      - pull_request
depends_on: []
trigger:
  ref:
  - refs/tags/**-dev
---
kind: pipeline
type: docker
name: manifest-bundle
platform:
  os: linux
  arch: amd64
steps:
- name: manifest
  image: bundle.lo/gitbundle/bundle-manifest
  pull: always
  settings:
    dump: true
    auto_tag: true
    spec: docker/manifest.bundle.tmpl
    username:
      from_secret: bundle.lo_docker_username_sk
    password:
      from_secret: bundle.lo_docker_password_sk
depends_on:
- bundle-private-linux-arm64
- bundle-private-linux-amd64
trigger:
  ref:
  - refs/tags/**-dev
